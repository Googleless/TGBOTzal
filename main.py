import asyncio

from aiogram import Bot, Dispatcher, F, types
from aiogram.filters import CommandStart, StateFilter
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram.types import Message

import klava
import zodiacsigns
import developer_info


bot = Bot(token=klava.BOT_TOKEN)

dp = Dispatcher()


# —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º –≥–æ—Ä–æ—Å–∫–æ–ø–∞
class HoroscopePages(StatesGroup):
    first_page = State()
    second_page = State()


# —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –º–µ–Ω—é
class InMenu(StatesGroup):
    in_menu = State()
    not_in_menu = State()


# –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–∞–Ω–∏—Ü –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —è –Ω–µ–∑–Ω–∞—é –µ—Å–ª–∏ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ —É–¥–∞–ª—è—Ç—å –Ω–µ —Ö–æ—á—É
available_pages = ["1", "2"]
###########################################################################################################


# —Å—Ç–∞—Ä—Ç –±–æ—Ç–∞ –∏ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@dp.message(CommandStart())
async def start(message: Message, state: FSMContext):
    await message.answer(f"""–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –¢–∞—Ä–æ, {message.from_user.first_name}, –≥–¥–µ —Å–∏–º–≤–æ–ª—ã –∏ –∞—Ä—Ö–µ—Ç–∏–ø—ã –æ—Ç–∫—Ä—ã–≤–∞—é—Ç –¥–≤–µ—Ä–∏ –≤ –ø–æ–¥—Å–æ–∑–Ω–∞–Ω–∏–µ –∏ —Ç–∞–π–Ω—ã –í—Å–µ–ª–µ–Ω–Ω–æ–π. –Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç—ã –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –¥—Ä–µ–≤–Ω–∏—Ö –∫–∞—Ä—Ç. –ó–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∏ –¥–∞–≤–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ —Ä–∞—Å–∫—Ä–æ–µ–º, —á—Ç–æ –∑–≤–µ–∑–¥—ã –≥–æ—Ç–æ–≤—è—Ç –¥–ª—è –≤–∞—Å.""", reply_markup=klava.main_kn)
    await state.set_state(InMenu.in_menu)
###########################################################################################################


# –∫–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
@dp.message(StateFilter(None, InMenu.in_menu), lambda message: message.text in ["üìí–ú–µ–Ω—é", "/menu"])
async def main_menu(message: types.Message, state: FSMContext):
    await message.answer("–û—Ç–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é... ", reply_markup=klava.menu_kb)
    await state.set_state(InMenu.in_menu)


@dp.message(lambda message: message.text in ["‚öñÔ∏è–ë—ã—Å—Ç—Ä—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø", "/horoscope"])
async def send_horoscope(message: types.Message, state: FSMContext):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: ", reply_markup=klava.horoscope_kb1)
    await state.set_state(HoroscopePages.first_page)
###########################################################################################################


# –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é:
@dp.message(StateFilter(InMenu.in_menu), lambda message: message.text in ["üßù‚Äç–£—Å–ª—É–≥–∏", "/services"])
async def services(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É:", reply_markup=klava.services_nav_kb)


@dp.message(StateFilter(InMenu.in_menu), lambda message: message.text in ["üîÆ–¢–æ–≤–∞—Ä—ã", "/goods"])
async def goods(message: types.Message):
    await message.answer("–ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã...", reply_markup=klava.goods_nav_kb)
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä: ", reply_markup=klava.simple_menu_kb)


@dp.message(StateFilter(InMenu.in_menu), lambda message: message.text in ["‚Ñπ–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "/info"])
async def info(message: types.Message):
    await message.answer("–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—à–∏ —Å–µ–∫—Ä–µ—Ç—ã... ", reply_markup=klava.info_kb)
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:  ", reply_markup=klava.inlineinfo_kb)


@dp.message(StateFilter(InMenu.in_menu), lambda message: message.text in ["üìú–û –ø—Ä–æ–µ–∫—Ç–µ", "/about"])
async def services(message: types.Message):
    await message.answer("–õ–∞–ø–æ—á–∫–∏, —Ä–∞–±–æ—Ç–∞–≤—à–∏–µ –Ω–∞–¥ —ç—Ç–∏–º –ø—Ä–æ–µ–∫—Ç–æ–º :3 –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã –≤—Å–µ–º –∑–∞ —É–¥–µ–ª—ë–Ω–Ω–æ–µ –∏–º –≤—Ä–µ–º—è!!!", reply_markup=klava.simple_menu_kb)
    await message.answer(developer_info.vadim_info, reply_markup=klava.vadim, )
    await message.answer(developer_info.irina_info, reply_markup=klava.irina)
    await message.answer(developer_info.pasha_info, reply_markup=klava.pasha)
    await message.answer(developer_info.philip_info, reply_markup=klava.philip)
    await message.answer(developer_info.artem_info, reply_markup=klava.artem)
###########################################################################################################


# –ø–æ—Ä—á–∞üíÄ
@dp.message(lambda message: message.text in ["ü™¶–ü–æ—Ä—á–∞", "/damage"])
async def porcha(message: types.Message):
    await message.answer("""–ù–µ–≥–∞—Ç–∏–≤–Ω–æ–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ, –∫–∞–∫ —Å—á–∏—Ç–∞–µ—Ç—Å—è, –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞–≤–µ–¥–µ–Ω–æ –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞, –∂–∏–≤–æ—Ç–Ω–æ–µ –∏–ª–∏ –ø—Ä–µ–¥–º–µ—Ç —Å –ø–æ–º–æ—â—å—é –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Ä–∏—Ç—É–∞–ª–æ–≤ –∏–ª–∏ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π. –≠—Ç–æ –ø–æ–Ω—è—Ç–∏–µ —Å–≤—è–∑–∞–Ω–æ —Å –º–∞–≥–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è–º–∏ –æ —Ç–æ–º, —á—Ç–æ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ –º—ã—Å–ª–∏ –∏–ª–∏ –∑–∞–≤–∏—Å—Ç—å –¥—Ä—É–≥–∏—Ö –ª—é–¥–µ–π –º–æ–≥—É—Ç –ø—Ä–∏—á–∏–Ω–∏—Ç—å –≤—Ä–µ–¥. –°—á–∏—Ç–∞–µ—Ç—Å—è, —á—Ç–æ –ø–æ—Ä—á–∞ –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã, –æ—Ç —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –±–æ–ª–µ–∑–Ω–µ–π –¥–æ –Ω–µ—É–¥–∞—á –≤ –ª–∏—á–Ω–æ–π –∂–∏–∑–Ω–∏ –∏–ª–∏ –±–∏–∑–Ω–µ—Å–µ.–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ –¥–ª—è —Å–Ω—è—Ç–∏—è –ø–æ—Ä—á–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ä–∞–∑–ª–∏—á–Ω—ã–µ –æ–±—Ä—è–¥—ã –æ—á–∏—â–µ–Ω–∏—è, –∞–º—É–ª–µ—Ç—ã –∏ –∑–∞–≥–æ–≤–æ—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –Ω–µ–π—Ç—Ä–∞–ª–∏–∑–æ–≤–∞—Ç—å –∏–ª–∏ –æ—Ç–≤–µ—Å—Ç–∏ –Ω–µ–≥–∞—Ç–∏–≤–Ω–æ–µ –≤–ª–∏—è–Ω–∏–µ.""", reply_markup=klava.porcha_btn)


# —Ä–∞—Å–∫–ª–∞–¥üÉè
@dp.message(lambda message: message.text in ["ü§î–†–∞—Å–∫–ª–∞–¥", "/spread"])
async def spread(message: types.Message):
    await message.answer("""–ú–µ—Ç–æ–¥ –≥–∞–¥–∞–Ω–∏—è, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–∞—Ä—Ç—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞, –ø–æ–Ω–∏–º–∞–Ω–∏—è —Å–∫—Ä—ã—Ç—ã—Ö –∏—Å—Ç–∏–Ω –∏–ª–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –±—É–¥—É—â–µ–≥–æ. –ö–∞–∂–¥–∞—è –∫–∞—Ä—Ç–∞ –¢–∞—Ä–æ –∏–º–µ–µ—Ç —Å–≤–æ–∏ —Å–∏–º–≤–æ–ª—ã, –æ–±—Ä–∞–∑—ã –∏ –∞—Ä—Ö–µ—Ç–∏–ø—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞–Ω—ã —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏—Ö —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –∏ –∫–æ–º–±–∏–Ω–∞—Ü–∏–π —Å –¥—Ä—É–≥–∏–º–∏ –∫–∞—Ä—Ç–∞–º–∏. –°—É—â–µ—Å—Ç–≤—É–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ä–∞—Å–∫–ª–∞–¥–æ–≤, –∏ –∫–∞–∂–¥—ã–π –∏–∑ –Ω–∏—Ö –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–ª–∏ —Å–∏—Ç—É–∞—Ü–∏–π. –ù–∞–ø—Ä–∏–º–µ—Ä, —Ä–∞—Å–∫–ª–∞–¥ "–ö–µ–ª—å—Ç—Å–∫–∏–π –∫—Ä–µ—Å—Ç" –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è —Å–ª–æ–∂–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π, –≤ —Ç–æ –≤—Ä–µ–º—è –∫–∞–∫ —Ä–∞—Å–∫–ª–∞–¥ "–¢—Ä–∏ –∫–∞—Ä—Ç—ã" –º–æ–∂–µ—Ç –¥–∞—Ç—å –±—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≤–æ–ø—Ä–æ—Å. –ü—Ä–∞–∫—Ç–∏–∫—É—é—â–∏–π, –∏–ª–∏ —Ç–∞—Ä–æ–ª–æ–≥, —Ç—â–∞—Ç–µ–ª—å–Ω–æ —Ç–∞—Å—É–µ—Ç –∫–∞—Ä—Ç—ã, –∑–∞–¥—É–º—ã–≤–∞—è –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –¥–µ—Ä–∂–∞ –≤ —É–º–µ —Å–∏—Ç—É–∞—Ü–∏—é, –∞ –∑–∞—Ç–µ–º –≤—ã–∫–ª–∞–¥—ã–≤–∞–µ—Ç –∏—Ö –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. –ö–∞–∂–¥–∞—è –ø–æ–∑–∏—Ü–∏—è –≤ —Ä–∞—Å–∫–ª–∞–¥–µ –∏–º–µ–µ—Ç —Å–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ—à–ª–æ–µ, –Ω–∞—Å—Ç–æ—è—â–µ–µ, –±—É–¥—É—â–µ–µ –∏–ª–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è –∏ —Ä–µ—Å—É—Ä—Å—ã.""", reply_markup=klava.spread_btn)


# –ø—Ä–∏–≤–æ—Ä–æ—Ç‚ô•
@dp.message(lambda message: message.text in ["ü§ç–ü—Ä–∏–≤–æ—Ä–æ—Ç", "/love_spell"])
async def privo(message: types.Message):
    await message.answer("""–ú–∞–≥–∏—á–µ—Å–∫–æ–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –Ω–∞ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏–µ –∏ —É–¥–µ—Ä–∂–∞–Ω–∏–µ –ª—é–±–≤–∏ –∏–ª–∏ –≤–Ω–∏–º–∞–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞. –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –∫–∞–∫ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏—Ç—è–∂–µ–Ω–∏–µ, —Ç–∞–∫ –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å–≤—è–∑—å. –ü—Ä–∏–≤–æ—Ä–æ—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –¥–ª—è —É–∫—Ä–µ–ø–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π –∏–ª–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö. –¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ –¥–ª—è –ø—Ä–∏–≤–æ—Ä–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ä–∏—Ç—É–∞–ª—ã –∏ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –∏–ª–∏ —Å –ø–æ–º–æ—â—å—é –≥–∞–¥–∞–ª–∫–∏ –∏–ª–∏ –≥–∞–¥–∞–ª—å—â–∏–∫–∞.""", reply_markup=klava.privo_btn)


# –≤–æ—Å–∫ ü´†
@dp.message(lambda message: message.text in ["ü´†–í–æ—Å–∫–æ–≤–∞—è –æ—Ç–ª–∏–≤–∫–∞", "/wax_casting"])
async def candle(message: types.Message):
    await message.answer("""–°–æ–≥–ª–∞—Å–Ω–æ –¥—Ä–µ–≤–Ω–∏–º —Ü–µ–ª–∏—Ç–µ–ª—å—Å–∫–∏–º –ø—Ä–∞–∫—Ç–∏–∫–∞–º –≤–æ—Å–∫–æ–≤–∞—è –æ—Ç–ª–∏–≤–∫–∞ —Å–ª—É–∂–∏–ª–∞ —â–∏—Ç–æ–º –∏ –æ—Ç—Ä–∞–∂–∞–ª–∞ –æ—Ç —á–µ–ª–æ–≤–µ–∫–∞ –≤—Å–µ –Ω–µ–¥—É–≥–∏.–í –Ω–∞—à–µ –≤—Ä–µ–º—è, –∫–æ–≥–¥–∞ –º–µ–¥–∏—Ü–∏–Ω–∞ –Ω–∞ –≤—ã—Å—à–µ–º —É—Ä–æ–≤–Ω–µ, –∫ —Ç–µ—Ö–Ω–∏–∫–µ –æ—Ç–ª–∏–≤–æ–∫ –ø—Ä–∏–±–µ–≥–∞—é—Ç, –∫–æ–≥–¥–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ü–∏–∫–ª–∏—á–Ω–æ—Å—Ç—å –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –±–µ–∑ –≤–∏–¥–∏–º—ã—Ö –Ω–∞ —Ç–æ –ø—Ä–∏—á–∏–Ω, –∏–ª–∏ –≤—Ä–∞—á–∏ –Ω–µ –º–æ–≥—É—Ç –ø–æ—Å—Ç–∞–≤–∏—Ç—å –¥–∏–∞–≥–Ω–æ–∑, –∞ –ª–µ—á–µ–Ω–∏–µ –Ω–µ –ø–æ–º–æ–≥–∞–µ—Ç, –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –∞–±—Å—É—Ä–¥–Ω—ã–µ –∏ –Ω–µ–æ–±—ä—è—Å–Ω–∏–º—ã–µ —Å—Ç–µ—á–µ–Ω–∏—è –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤, ‚Äî –≤ —ç—Ç–∏—Ö –∏ –º–Ω–æ–≥–∏—Ö –¥—Ä—É–≥–∏—Ö —Å–ª—É—á–∞—è—Ö –Ω–µ –ª–∏—à–Ω–∏–º –±—ã —Å–¥–µ–ª–∞—Ç—å –æ—Ç–ª–∏–≤–∫—É –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–µ—Ä–≤–æ–ø—Ä–∏—á–∏–Ω—É –ø—Ä–æ–±–ª–µ–º—ã.–ú–µ–¥–∏—Ü–∏–Ω–∞ –±—É–¥–µ—Ç –ª–µ—á–∏—Ç—å –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è, –Ω–æ –¥–æ–±—Ä–∞—Ç—å—Å—è –¥–æ –∏—Å—Ç–æ–∫–æ–≤ –Ω–µ –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é –∞–Ω–∞–ª–∏–∑–æ–≤, –∏ —Ç—É—Ç –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫—É—é —ç–Ω–µ—Ä–≥–æ–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É, –ø—Ä–∏ —ç—Ç–æ–º –Ω–µ –∏—Å–∫–ª—é—á–∞—è —Å–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –ª–µ—á–µ–Ω–∏—è. –í–æ—Å–∫–æ–≤—ã–µ –æ—Ç–ª–∏–≤–∫–∏ ‚Äî —ç—Ç–æ –Ω–µ –ø–∞–Ω–∞—Ü–µ—è –æ—Ç –≤—Å–µ—Ö –±–µ–¥, –Ω–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –Ω–µ—Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–π –ø–æ–º–æ—â–∏ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –Ω–µ–Ω—É–∂–Ω—ã–π —Ñ–æ—Ä—Å-–º–∞–∂–æ—Ä –≤ –∂–∏–∑–Ω–∏.""", reply_markup=klava.candle_btn)
############################################################################################################


# –∫–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
@dp.message(lambda message: message.text in ["–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "–ù–∞–∑–∞–¥"])
async def main_menu(message: types.Message, state: FSMContext):
    await message.answer("–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...  ", reply_markup=klava.main_kn)
    await state.set_state(InMenu.in_menu)


###########################################################################################################


@dp.message(StateFilter(HoroscopePages.first_page), lambda message: message.text in ["‚ôà–û–≤–µ–Ω", "/aries"])
async def aries_info(message: types.Message, state: FSMContext):
    await message.answer(f'{zodiacsigns.aries_text()}', reply_markup=klava.back_to_menu_kb)
    await state.set_state(None)


@dp.message(StateFilter(HoroscopePages.first_page), lambda message: message.text in ["‚ôâ–¢–µ–ª–µ—Ü", "/taurus"])
async def taurus_info(message: types.Message, state: FSMContext):
    await message.answer(f'{zodiacsigns.taurus_text()}', reply_markup=klava.back_to_menu_kb)
    await state.set_state(None)


@dp.message(StateFilter(HoroscopePages.first_page), lambda message: message.text in ["‚ôä–ë–ª–∏–∑–Ω–µ—Ü—ã", "/gemini"])
async def gemini_info(message: types.Message):
    await message.answer(f'{zodiacsigns.gemini_text()}', reply_markup=klava.back_to_menu_kb)


@dp.message(StateFilter(HoroscopePages.first_page), lambda message: message.text in ["‚ôã–†–∞–∫", "/cancer"])
async def cancer_info(message: types.Message):
    await message.answer(f'{zodiacsigns.cancer_text()}', reply_markup=klava.back_to_menu_kb)


@dp.message(StateFilter(HoroscopePages.first_page), lambda message: message.text in ["‚ôå–õ–µ–≤", "/leo"])
async def leo_info(message: types.Message):
    await message.answer(f'{zodiacsigns.leo_text()}', reply_markup=klava.back_to_menu_kb)


@dp.message(StateFilter(HoroscopePages.first_page), lambda message: message.text in ["‚ôç–î–µ–≤–∞", "/virgo"])
async def virgo_info(message: types.Message):
    await message.answer(f'{zodiacsigns.virgo_text()}', reply_markup=klava.back_to_menu_kb)


@dp.message(StateFilter(HoroscopePages.first_page), lambda message: message.text in ["‚ôé–í–µ—Å—ã", "/libra"])
async def libra_info(message: types.Message):
    await message.answer(f'{zodiacsigns.libra_text()}', reply_markup=klava.back_to_menu_kb)


@dp.message(StateFilter(HoroscopePages.second_page), lambda message: message.text in ["‚ôè–°–∫–æ—Ä–ø–∏–æ–Ω", "/scorpio"])
async def scorpio_info(message: types.Message):
    await message.answer(f'{zodiacsigns.scorpio_text()}', reply_markup=klava.back_to_menu_kb)


@dp.message(StateFilter(HoroscopePages.second_page), lambda message: message.text in ["‚ôê–°—Ç—Ä–µ–ª–µ—Ü", "/scorpio"])
async def capricorn_info(message: types.Message):
    await message.answer(f'{zodiacsigns.sagittarius_text()}', reply_markup=klava.back_to_menu_kb)


@dp.message(StateFilter(HoroscopePages.second_page), lambda message: message.text in ["‚ôë–ö–æ–∑–µ—Ä–æ–≥", "/capricorn"])
async def capricorn_info(message: types.Message):
    await message.answer(f'{zodiacsigns.capricorn_text()}', reply_markup=klava.back_to_menu_kb)


@dp.message(StateFilter(HoroscopePages.second_page), lambda message: message.text in ["‚ôí–í–æ–¥–æ–ª–µ–π", "/aquarius"])
async def aquarius_info(message: types.Message):
    await message.answer(f'{zodiacsigns.aquarius_text()}', reply_markup=klava.back_to_menu_kb)


@dp.message(StateFilter(HoroscopePages.second_page), lambda message: message.text in ["‚ôì–†—ã–±—ã", "/pisces"])
async def pisces_info(message: types.Message):
    await message.answer(f'{zodiacsigns.pisces_text()}', reply_markup=klava.back_to_menu_kb)


# —Ç—É—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–æ–≥–∏–∫–∞ –≥–æ—Ä–æ—Å–∫–æ–ø–∞, –∏–¥—ë—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –ø–æ—Ç–æ–º –ø–µ—Ä–µ–∫–∏–¥—ã–≤–∞–µ—Ç
# –≤—Ä–æ–¥–µ –Ω–µ –ª–æ–º–∞–ª–æ—Å—å, –Ω–∞–¥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å
@dp.message(
    HoroscopePages.first_page,
    F.text.in_(available_pages))
async def horoscope_pg2(message: Message, state: FSMContext):
    await message.answer("–í—Ç–æ—Ä–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≥–æ—Ä–æ—Å–∫–æ–ø–∞", reply_markup=klava.horoscope_kb2)
    await state.set_state(HoroscopePages.second_page)


@dp.message(
    HoroscopePages.second_page,
    F.text.in_(available_pages))
async def horoscope_pg1(message: types.Message, state: FSMContext):
    await state.update_data(page=message.text.lower())
    await message.answer("–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≥–æ—Ä–æ—Å–∫–æ–ø–∞", reply_markup=klava.horoscope_kb1,)
    await state.set_state(HoroscopePages.first_page)
###########################################################################################################
# —Ç—É—Ç –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –ª–æ–≥–∏–∫–∞ –≥–æ—Ä–æ—Å–∫–æ–ø–∞
# –Ω–∞–¥–æ –±—É–¥–µ—Ç –¥–∞—Ç—å –∞—Ä—Ç—ë–º—É –≤—Å—ë –ø—Ä–æ–≤–µ—Ä–∏—Ç—å


async def main():
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
